#version 330
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

struct PointLight
{
    vec3 position_ws;
    vec3 position_vs;
    vec4 color;
    float range;
    float intensity;
    int shadow_map;
};

struct DirectionalLight
{
    vec3 direction_ws;
    vec3 direction_vs;
    vec4 color;
    float intensity;
    int shadow_map;
};

struct SpotLight
{
    vec3 position_ws;
    vec3 direction_ws;
    vec3 position_vs;
    vec3 direction_vs;
    vec4 color;
    float spotlight_half_angle;
    float range;
    float intensity;
    int shadow_map;
};

struct ShadowMap2DData
{
    mat4 shadow_map_view_proj;
    vec3 shadow_map_light_dir;
};

struct ShadowMapCubeData
{
    float cube_map_projection_near_z;
    float cube_map_projection_far_z;
};

layout(std140) uniform PerViewData
{
    mat4 view[1];
    mat4 view_proj;
    vec4 ambient_light;
    int point_light_count;
    int directional_light_count;
    int spot_light_count;
    PointLight point_lights[16];
    DirectionalLight directional_lights[16];
    SpotLight spot_lights[16];
    ShadowMap2DData shadow_map_2d_data[32];
    ShadowMapCubeData shadow_map_cube_data[16];
} per_view_data;

out vec4 interface_var_0;
layout(location = 1) in vec4 in_color;
layout(location = 0) in vec4 pos;

void main()
{
    interface_var_0 = in_color;
    gl_Position = pos;
}

